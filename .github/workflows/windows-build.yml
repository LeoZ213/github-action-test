name: Windows Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # https://flet.dev/docs/publish#versioning
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0

  # Use the Python version you requested
  PYTHON_VERSION: 3.13.7

  # flet-cli version to install for `flet build`
  FLET_CLI_VERSION: 0.28.3

  PYTHONUTF8: 1
  FLET_CLI_NO_RICH_OUTPUT: 1
  UV_NO_PROGRESS: 1

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 40

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          # Windows pip cache path
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies & flet-cli
        run: |
          python -m pip install --upgrade pip
          # install your project deps if you have requirements.txt (ignore if not present)
          pip install -r requirements.txt || true
          # install flet-cli using the env var from GitHub Action interpolation
          pip install flet-cli==${{ env.FLET_CLI_VERSION }} pytest

      - name: Run tests (if any)
        run: |
          pytest -q || echo "pytest returned non-zero (no tests / failures)"

      - name: Flet Build (Windows)
        run: |
          flet build windows --verbose --no-rich-output --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}

      - name: Upload Windows artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-artifact
          path: |
            build/windows/**
          if-no-files-found: warn
