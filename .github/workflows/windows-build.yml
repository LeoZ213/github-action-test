name: Windows Build

on:
  # Runs on push to any of the below branches
  push:
    branches:
      - main

  # Runs on pull request events that target one of the below branches
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

env:
  # https://flet.dev/docs/publish#versioning
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0

  # Python version to use
  PYTHON_VERSION: 3.13.7

  # flet-cli version to install for `flet build`
  FLET_CLI_VERSION: 0.28.3

  # Ensures Python uses UTF-8 encoding by default
  PYTHONUTF8: 1

  # Disables rich text formatting in Flet CLI output
  FLET_CLI_NO_RICH_OUTPUT: 1

  # Disables progress bars when using UV
  UV_NO_PROGRESS: 1

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup Flutter so Dart 3.9+ is available
    - name: Setup Flutter (3.35.x)
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.5'
        channel: stable

    # Diagnostic snippet: ensure the workflow actually uses the installed flutter
    - name: Diagnose Flutter / ensure correct SDK used (PowerShell)
      shell: pwsh
      run: |
        Write-Host "=== PATH (truncated) ==="
        # show PATH (truncated length to avoid huge output in logs)
        $env:PATH.Substring(0, [Math]::Min(1000, $env:PATH.Length)) | Write-Host
        Write-Host "=== where flutter ==="
        where.exe flutter 2>&1 | Write-Host
        Write-Host "=== Get-Command flutter ==="
        try {
          Get-Command flutter | Format-List -Property Path -Force | Write-Host
        } catch {
          Write-Host "Get-Command flutter failed or flutter not found"
        }

        # If flutter exists, infer SDK root, set FLUTTER_ROOT and prepend flutter/bin to PATH for later steps
        $cmd = Get-Command flutter -ErrorAction SilentlyContinue
        if ($cmd) {
          $flutterCmd = $cmd.Path
          $flutterBinDir = Split-Path $flutterCmd -Parent
          $flutterSdkRoot = Split-Path $flutterBinDir -Parent
          Write-Host "Found flutter at: $flutterCmd"
          Write-Host "Inferred FLUTTER_SDK_ROOT: $flutterSdkRoot"

          "FLUTTER_ROOT=$flutterSdkRoot" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

          # Prepend flutter/bin to PATH for subsequent steps
          $newPath = "$flutterBinDir;$env:PATH"
          "PATH=$newPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "Prepended flutter/bin to PATH for later steps: $flutterBinDir"
        } else {
          Write-Host "flutter command not found. The setup action may have failed or PATH isn't updated yet."
        }

        Write-Host "=== flutter --version ==="
        flutter --version 2>&1 | Write-Host

        Write-Host "=== dart --version ==="
        dart --version 2>&1 | Write-Host

        Write-Host "Attempting flutter pub cache repair (may be helpful if stale cache exists)..."
        flutter pub cache repair 2>&1 | Write-Host || Write-Host "pub cache repair failed or returned non-zero (not fatal)"

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$env:FLET_CLI_VERSION

    - name: Flet Build Windows
      run: |
        flet build windows --verbose --no-rich-output --build-number=$env:BUILD_NUMBER --build-version=$env:BUILD_VERSION

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windows-build-artifact
        path: build/windows
        if-no-files-found: error
        overwrite: false
